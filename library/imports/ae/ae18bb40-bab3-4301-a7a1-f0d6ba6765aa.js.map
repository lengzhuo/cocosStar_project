{"version":3,"sources":["..\\..\\..\\..\\assets\\script/assets\\script\\Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","type","AudioClip","onLoad","jumpAction","setJumpAction","node","runAction","accLeft","accRight","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","jumpUP","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","event","keyCode","macro","KEY","a","d","start","update","dt","Math","abs","x"],"mappings":"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","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    // 规定 - 一个节点具有的属性都要写在properties中， 相当于绑定在类的原型上\r\n    properties: {\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0,\r\n\r\n        // 音效\r\n        jumpAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n    },\r\n\r\n    onLoad() {\r\n        // 初始化跳跃动作\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n\r\n        // 加速度方向开关\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        // 主角当前水平方向速度\r\n        this.xSpeed = 0;\r\n\r\n        // 初始化键盘监听\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },\r\n\r\n    setJumpAction: function () {\r\n        // 跳跃上升\r\n        var jumpUP = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // 下落\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n\r\n        // 添加声音回调\r\n        var callFunc = cc.callFunc(this.playJumpSound, this);\r\n\r\n        return cc.repeatForever(cc.sequence(jumpUP, jumpDown, callFunc));\r\n    },\r\n\r\n    playJumpSound: function () {\r\n        // 调用声音引擎播放声音\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n\r\n    // 键盘按下\r\n    onKeyDown(event) {\r\n        switch (event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = true;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = true;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n\r\n    // 键盘弹起\r\n    onKeyUp(event) {\r\n        switch (event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = false;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = false;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    update(dt) {\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        // 限制主角速度不能超过最大值\r\n        if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // 根据当前速度更新主角位置\r\n        this.node.x += this.xSpeed * dt;\r\n    }\r\n});\r\n"]}