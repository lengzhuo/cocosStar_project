{"version":3,"sources":["Star.js"],"names":["cc","Class","extends","Component","ctor","properties","pickRadius","onLoad","getPlayerDistance","playerPos","game","player","getPosition","dist","node","position","sub","mag","onPicked","spawnNewStar","gainScore","destroy","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACL;AACAC,aAASF,GAAGG,SAFP;;AAIL;AACAC,UAAM,gBAAY,CAEjB,CAPI;;AASLC,gBAAY;AACR;AACAC,oBAAY;AAFJ,KATP;;AAcL;;AAEAC,UAhBK,oBAgBI,CAAG,CAhBP;;;AAkBLC,uBAAmB,6BAAY;AAC3B;AACA,YAAIC,YAAY,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,OAAO,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,SAAvB,EAAkCQ,GAAlC,EAAX;AACA,eAAOJ,IAAP;AACH,KAxBI;;AA0BLK,cAAU,oBAAY;AAClB;AACA,aAAKR,IAAL,CAAUS,YAAV;AACA;AACA,aAAKT,IAAL,CAAUU,SAAV;AACA;AACA,aAAKN,IAAL,CAAUO,OAAV;AACH,KAjCI;;AAmCLC,UAnCK,kBAmCEC,EAnCF,EAmCM;AACP;AACA,YAAI,KAAKf,iBAAL,KAA2B,KAAKF,UAApC,EAAgD;AAC5C;AACA,iBAAKY,QAAL;AACA;AACH;;AAED;AACA,YAAIM,eAAe,IAAI,KAAKd,IAAL,CAAUe,KAAV,GAAkB,KAAKf,IAAL,CAAUgB,YAAnD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKb,IAAL,CAAUc,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;AACH;AA/CI,CAAT","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    // 继承父类 \r\n    extends: cc.Component,\r\n\r\n    // 构造函数\r\n    ctor: function () {\r\n\r\n    },\r\n\r\n    properties: {\r\n        // 星星与主角之间的距离\r\n        pickRadius: 0\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() { },\r\n\r\n    getPlayerDistance: function () {\r\n        // 根据player节点位置判断距离\r\n        var playerPos = this.game.player.getPosition();\r\n        // 根据两点之间位置计算两点距离\r\n        var dist = this.node.position.sub(playerPos).mag();\r\n        return dist;\r\n    },\r\n\r\n    onPicked: function () {\r\n        // 当星星收集时，调用Game脚本中的接口，生成一个新的星星\r\n        this.game.spawnNewStar();\r\n        // 得分\r\n        this.game.gainScore();\r\n        // 然后销毁当前节点\r\n        this.node.destroy();\r\n    },\r\n\r\n    update(dt) {\r\n        // 每帧判断主角之间距离是否小于最小收集距离\r\n        if (this.getPlayerDistance() < this.pickRadius) {\r\n            // 调用收集行为\r\n            this.onPicked();\r\n            return;\r\n        }\r\n\r\n        // 根据game脚本中的计时器更新星星的透明度\r\n        var opacityRatio = 1 - this.game.timer / this.game.starDuration;\r\n        var minOpacity = 50;\r\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\r\n    },\r\n});\r\n"]}